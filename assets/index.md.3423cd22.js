import{_ as e,c as t,o as a,a as r}from"./app.23b4d405.js";const b=JSON.parse('{"title":"Library-Free State Management","description":"","frontmatter":{},"headers":[{"level":2,"title":"Modern frameworks have built-in technologies allowing to write state management critical features by your own","slug":"modern-frameworks-have-built-in-technologies-allowing-to-write-state-management-critical-features-by-your-own","link":"#modern-frameworks-have-built-in-technologies-allowing-to-write-state-management-critical-features-by-your-own","children":[]},{"level":2,"title":"ðŸ¤” What does state management libraries do?","slug":"what-does-state-management-libraries-do","link":"#what-does-state-management-libraries-do","children":[]},{"level":2,"title":"ðŸ˜Ÿ State management libraries are NOT perfect","slug":"state-management-libraries-are-not-perfect","link":"#state-management-libraries-are-not-perfect","children":[]}],"relativePath":"index.md"}'),n={name:"index.md"},i=r('<h1 id="library-free-state-management" tabindex="-1">Library-Free State Management <a class="header-anchor" href="#library-free-state-management" aria-hidden="true">#</a></h1><h2 id="modern-frameworks-have-built-in-technologies-allowing-to-write-state-management-critical-features-by-your-own" tabindex="-1">Modern frameworks have built-in technologies allowing to write state management critical features by your own <a class="header-anchor" href="#modern-frameworks-have-built-in-technologies-allowing-to-write-state-management-critical-features-by-your-own" aria-hidden="true">#</a></h2><h2 id="what-does-state-management-libraries-do" tabindex="-1">ðŸ¤” What does state management libraries do? <a class="header-anchor" href="#what-does-state-management-libraries-do" aria-hidden="true">#</a></h2><p>State libraries (vuex for vue 2, pinia for vue 3, NGRX for Angular etc.) help you to achieve:</p><ul><li><strong>SINGLE SOURCE OF TRUTH</strong>: singleton state object that is shared across components</li><li><strong>IMMUTABILITY</strong>: immutable or ready-only declarative mapping of the state exposed to components (getters &amp; selectors)</li><li><strong>MUTABILITY</strong>: expose actions allowing state to be internally mutable in response to certain events</li><li><strong>REACTIVITY</strong>: immutable getters/selectors must be reactive</li></ul><img width="960" alt="state-machine" src="https://user-images.githubusercontent.com/5698884/211715788-c2f0603f-aa42-40fa-926c-d92e59986ab7.png"><h2 id="state-management-libraries-are-not-perfect" tabindex="-1">ðŸ˜Ÿ State management libraries are NOT perfect <a class="header-anchor" href="#state-management-libraries-are-not-perfect" aria-hidden="true">#</a></h2><ul><li>They have learning curves</li><li>Some of them have too much boilerplate that overkills a simple feature (e.g. redux &amp; NGRX)</li></ul>',8),o=[i];function s(l,m,c,h,d,g){return a(),t("div",null,o)}const f=e(n,[["render",s]]);export{b as __pageData,f as default};
